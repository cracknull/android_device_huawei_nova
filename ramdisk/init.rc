import /init.recovery.${ro.hardware}.rc
import init.recovery.huawei.rc
#
#  modify device/$(vendor)/$(product)/init.recovery.huawei.rc .
#
#  e.g. :  device/qcom/titanium_64/init.recovery.huawei.rc
#

on early-init
    start ueventd
    start healthd

on init
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mkdir /firmware
    mount tmpfs tmpfs /tmp

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/vm/max_map_count 1000000

    chown system system /sys/class/usbswitch/usbsw/swstate

on fs
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    mkdir /dev/usb-ffs/hdb 0770 shell shell
    mount functionfs_hdb hdb /dev/usb-ffs/hdb uid=2000,gid=2000
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 18D1
#    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/f_ffs/aliases adb
#    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
#    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    usb_init_setting

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

# Load properties from /system/ + /factory after fs mount.
on load_system_props_action
    load_system_props

on firmware_mounts_complete
   rm /dev/.booting

# Mount filesystems and start core system services.
on early-fs
    wait /dev/block/bootdevice/by-name/oeminfo
    start oeminfo_nvm

on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_system_props_action

    # Remove a file to wake up anything waiting for firmware
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0

service healthd /sbin/healthd -r
    critical
    seclabel u:r:healthd:s0

service test_diag /sbin/test_diag
    seclabel u:r:test_diag:s0

service recovery /sbin/recovery
    seclabel u:r:recovery:s0

service adbd /sbin/adbd --root_seclabel=u:r:su:s0 --device_banner=recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0

# Always start adbd on userdebug and eng builds
#on property:ro.debuggable=1
#    write /sys/class/android_usb/android0/enable 1
#    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

# /* to process the usb port switch uevent */
service hw_ueventd /sbin/hw_ueventd
    seclabel u:r:hw_ueventd:s0

#service hdbd /sbin/hdbd
service hdbd /sbin/hdbd --root_seclabel=u:r:su:s0
    class core
    socket hdbd stream 660 system system
    disabled
    seclabel u:r:adbd:s0

# Used to disable USB when switching states
on property:sys.usb.config=none
    stop hdbd
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state ${sys.usb.config}

# /* USB google mode configuration */
on property:sys.usb.config=mass_storage
    stop hdbd
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 1037
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# /* USB factory mode configuration */
on property:sys.usb.config=manufacture,adb
    stop hdbd
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 107d
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/f_diag/clients diag
    write /sys/class/android_usb/android0/f_serial/transports ${ro.hw.usb.serial.transport}
    write /sys/class/android_usb/android0/functions serial,diag,adb,hdb
    write /sys/class/android_usb/android0/enable 1
    start hdbd
    start adbd
    start test_diag
    setprop sys.usb.state ${sys.usb.config}

# /* USB update mode configuration */
on property:sys.usb.config=update,serial,mass_storage,adb
    stop hdbd
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 107d
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/f_diag/clients diag
    write /sys/class/android_usb/android0/f_serial/transports smd,tty
    write /sys/class/android_usb/android0/functions serial,diag,adb,hdb
    write /sys/class/android_usb/android0/enable 1
    start hdbd
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# /* USB update mode configuration without adb*/
on property:sys.usb.config=update,serial
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 107d
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/f_diag/clients diag
    write /sys/class/android_usb/android0/f_serial/transports smd,tty
    write /sys/class/android_usb/android0/functions serial
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

service oeminfo_nvm /sbin/oeminfo_nvm_server
    class core
    critical
    ioprio rt 4
    seclabel u:r:oeminfo_nvm:s0

service wcnss-service /system/bin/wcnss_service
    seclabel u:r:wcnss_service:s0
    disabled
    oneshot
on property:recovery.start_svice=true
    start wcnss-service
on property:erecovery.run.wcnss=start
    start wcnss-service

on property:androidboot.aging_test_emmc=true
    mount ext4 /dev/block/bootdevice/by-name/cache /cache -o rw
    mount debugfs debugfs /sys/kernel/debug

